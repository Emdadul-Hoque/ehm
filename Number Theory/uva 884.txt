#include<bits/stdc++.h>
using namespace std;

#define size_n 1000001
#define size_p 1000001

bool flag[size_n+5];
int primes[size_p+5];
static int prime_divisor[1000001];

void sieve()
{
    int i, j, total=0, value;

    for(i=2; i<=size_n; i++) flag[i]=1;

    value=sqrt(size_n)+1;

    for(i=2; i<value; i++){
        if(flag[i]){
            for(j=i; j*i<=size_n; j++){
                flag[i*j]=0;
            }
        }
    }

    for(i=2; i<=size_n; i++){
        if(flag[i])
            primes[total++]=i;
    }
}

void divisor()
{
    int i, cnt;

    sieve();

    prime_divisor[1]=0;

    for(i=2; i<size_n; i++){
        prime_divisor[i]=prime_divisor[i-1];

        int n=i, j=0;
        while(!flag[n]){
            if(n%primes[j]==0){
                prime_divisor[i]++;
                n/=primes[j];
            }
            else j++;
        }
        if(flag[n]) prime_divisor[i]++;
    }

}


int main()
{
    int number;

    divisor();

    while(scanf("%d",&number)==1){

        printf("%d\n",prime_divisor[number]);

    }
    return 0;
}
