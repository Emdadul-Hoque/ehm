#include<bits/stdc++.h>
using namespace std;

#define size_n 1000100
#define size_p 1000100

bool flag [size_n+5];
int primes [size_p+5], ans[size_p+5]={0};

void sieve()
{
    int i, j, total=0, value;

    for(i=2; i<=size_n; i++) flag[i]=1;

    value=sqrt(size_n)+1;

    for(i=2; i<value; i++){
        if(flag[i]){
            for(j=i; j*i<=size_n; j++){
                flag[i*j]=0;
            }
        }
    }

    for(i=2; i<=size_n; i++){
        if(flag[i]){
            primes[total]=i;
            if(total>0){
                ans[i]=primes[total] - primes[total-1];
            }
            total++;
        }
    }
}

int main()
{
    sieve();

    int mex, t, i, lower, upper, cnt[1000], j, c, arr[1000], num;
    scanf("%d",&t);
    while(t-->0){
        scanf("%d%d",&lower,&upper);

        for(i=0; i<1000; i++) cnt[i]=0;
        mex=0, c=0, j=0;

        for(i=lower; i<=upper; i++){
            if(ans[i]>0 && c>0){
                cnt[ans[i]]+=1;
            }
            if(flag[i]) c++;
        }

        for(i=0; i<1000; i++){
            if(cnt[i]>0){
                    if(cnt[i]>mex){
                    mex=cnt[i];
                    num=i;
                }
            }
        }

        for(i=0; i<1000; i++){
            if(cnt[i]==mex){
                j++;
            }
        }

        if(j==1) printf("The jumping champion is %d\n",num);
        else printf("No jumping champion\n");

    }
    return 0;
}
