#include<bits/stdc++.h>
using namespace std;

#define size_n 1000000
#define size_p 1000000

bool flag[size_n+5];
int primes[size_p+5];

void sieve()
{
    int i, j, val, total=0;

    for(i=2; i<=size_n; i++) flag[i]=1;

    val=sqrt(size_n)+1;

    for(i=2; i<val; i++)
    {
        if(flag[i])
        {
            for(j=i; j*i<=size_n; j++)
            {
                flag[i*j]=0;
            }
        }
    }

    for(i=2; i<=size_n; i++){
        if(flag[i]){
            primes[total++]=i;
        }
    }

}

int different_prime_factor(int n)
{
    int i, val, c=0;

    val=(n/2)+1;

    for(i=0; primes[i]<=val; i++){

        if(n%primes[i]==0){
            c++;
            while(n%primes[i]==0){
                n/=primes[i];
            }
        }
    }

    return c;
}

int main()
{

    sieve();

    int n;

    while(scanf("%d",&n)==1){
        if(n==0) return 0;

        if(flag[n]) printf("%d : 1\n",n);
        else printf("%d : %d\n",n,different_prime_factor(n));
    }

    return 0;
}

