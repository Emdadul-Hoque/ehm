#include<bits/stdc++.h>
using namespace std;
#define maxn 1000001
#define limitt 1000000000000

bool isprime[maxn];
vector<long long int>prime;
vector<long long int>almostPrime;

void sieve()
{
    isprime[0]=isprime[1]=true;
    for(long long int i=4; i<maxn; i+=2) isprime[i]=true;
    for(long long int i=3; i*i<maxn; i+=2){
        if(!isprime[i]){
            for(long long int j=i*i; j<maxn; j+=i+i){
                isprime[j]=true;
            }
        }
    }
    prime.push_back(2);
    for(long long int i=3; i<maxn; i+=2){
        if(!isprime[i]) prime.push_back(i);
    }
}

bool almostprime()
{
    long long int sz=prime.size();
    for(long long int i=0; i<sz; i++){
        for(long long int j=prime[i]*prime[i]; j<limitt; j*=prime[i]){
            almostPrime.push_back(j);
        }
    }
}

int main()
{
    long long int casee, low, high, ans;
    sieve();
    almostprime();
    sort(almostPrime.begin(), almostPrime.end());
    scanf("%lld",&casee);
    while(casee--){
        scanf("%lld%lld",&low,&high);
        int i=0;
        ans=0;
        while(almostPrime[i]<=high){
            if(almostPrime[i]>=low) ans++;
            i++;
        }
        printf("%lld\n",ans);
    }
    return 0;
}
